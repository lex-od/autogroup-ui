---
description: 
globs: 
alwaysApply: true
---
# **–ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è AI-–∞–≥–µ–Ω—Ç–∞: –ü—Ä–æ–µ–∫—Ç –Ω–∞ Next.js 15**

–≠—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞. AI-–∞–≥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω —Å—Ç—Ä–æ–≥–æ —Å–ª–µ–¥–æ–≤–∞—Ç—å —ç—Ç–∏–º –ø—Ä–∞–≤–∏–ª–∞–º –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏, –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏ –∫–æ–¥–∞.

## **1\. –û–±—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏ —Å—Ç–∏–ª—å –∫–æ–¥–∞**

* **–Ø–∑—ã–∫ –∏ —Å—Ä–µ–¥–∞**: –í–µ—Å—å –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ **TypeScript 5**. –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º (strict mode).  
* **–°—Ç–∏–ª—å –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**:  
  * **ESLint –∏ Prettier** —è–≤–ª—è—é—Ç—Å—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –∏—Å—Ç–∏–Ω—ã –¥–ª—è —Å—Ç–∏–ª—è –∫–æ–¥–∞. –í—Å–µ–≥–¥–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã–π –∫–æ–¥.  
  * –ò—Å–ø–æ–ª—å–∑—É–π prettier-plugin-tailwindcss –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∫–ª–∞—Å—Å–æ–≤ Tailwind CSS.  
* **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**:  
  * –ü—Ä–æ–µ–∫—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç **Next.js 15 App Router**. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —è–≤–ª—è—é—Ç—Å—è **—Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏** (Server Components).  
  * –î–æ–±–∞–≤–ª—è–π –¥–∏—Ä–µ–∫—Ç–∏–≤—É "use client" —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö, –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ö—É–∫–æ–≤ useState, useEffect, useRef –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π onClick, onChange).  
* **–ò–º–ø–æ—Ä—Ç—ã**: –ò—Å–ø–æ–ª—å–∑—É–π **–∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏** –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤ –∏–∑ –∫–æ—Ä–Ω–µ–≤—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, import { Button } from '@/components/ui/button').

## **2\. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ**

–ü—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ —Å—Ç—Ä–æ–≥–æ –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Å—è —Å–ª–µ–¥—É—é—â–µ–π —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:

* üìÅ /app ‚Äî –†–æ—É—Ç–∏–Ω–≥, —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ API-–º–∞—Ä—à—Ä—É—Ç—ã.  
  * /app/api/\*\* ‚Äî –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö API-—ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ (Route Handlers).  
  * /app/(main)/dashboard ‚Äî –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ —Ä–æ—É—Ç–æ–≤ –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ URL.  
  * page.tsx ‚Äî UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã.  
  * layout.tsx ‚Äî –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–∞–∫–µ—Ç–∞.  
  * loading.tsx ‚Äî –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏.  
  * error.tsx ‚Äî –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫.  
* üìÅ /components ‚Äî –í—Å–µ React-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.  
  * /core/ ‚Äî –û—Å–Ω–æ–≤–Ω—ã–µ, –Ω–µ—Ä–∞–∑–¥–µ–ª–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, Header, Footer, Sidebar).  
  * /screens/ ‚Äî –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (—ç–∫—Ä–∞–Ω–æ–≤), –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∏–∑ core –∏ ui –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, LoginScreen, DashboardScreen.  
  * /ui/ ‚Äî –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ **Radix UI** (–Ω–∞–ø—Ä–∏–º–µ—Ä, Button, Input, Card). –≠—Ç–æ —Ç–≤–æ—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.  
* üìÅ /stores ‚Äî –•—Ä–∞–Ω–∏–ª–∏—â–∞ **Zustand**.  
  * /auth/auth.store.ts ‚Äî –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.  
  * /global/settings.store.ts ‚Äî –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.  
* üìÅ /services ‚Äî –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.  
  * /api/api-client.ts ‚Äî –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä **Axios**.  
  * /api/queries/user.queries.ts ‚Äî –•—É–∫–∏ **React Query** –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—É—â–Ω–æ—Å—Ç–µ–π.  
* üìÅ /lib ‚Äî –£—Ç–∏–ª–∏—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.  
  * /utils.ts ‚Äî –û–±—â–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, cn –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤).  
  * /validators.ts ‚Äî –°—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ **Zod**.

## **3\. –†–∞–±–æ—Ç–∞ —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –∏ —Å—Ç–∏–ª—è–º–∏**

* **–°—Ç–∏–ª–∏–∑–∞—Ü–∏—è**: –î–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è **TailwindCSS 4**. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π CSS-in-JS –∏–ª–∏ –æ–±—ã—á–Ω—ã–µ .css —Ñ–∞–π–ª—ã, –∫—Ä–æ–º–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –≤ layout.tsx.  
* **–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∫–ª–∞—Å—Å—ã**: –î–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π —É—Ç–∏–ª–∏—Ç—ã clsx –∏ tailwind-merge. –°–æ–∑–¥–∞–π –¥–ª—è –Ω–∏—Ö –æ–±—â—É—é —É—Ç–∏–ª–∏—Ç—É cn –≤ /lib/utils.ts.  
  // –§–∞–π–ª: /lib/utils.ts  
  import { type ClassValue, clsx } from "clsx"  
  import { twMerge } from "tailwind-merge"

  export function cn(...inputs: ClassValue\[\]) {  
    return twMerge(clsx(inputs))  
  }  
  \`\`\`tsx  
  // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ  
  import { cn } from '@/lib/utils';

  function MyButton({ isActive, className }: { isActive: boolean; className?: string }) {  
    return (  
      \<button className={cn(  
        'px-4 py-2 rounded font-bold transition-colors', // –±–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏  
        { 'bg-blue-500 text-white hover:bg-blue-600': isActive }, // —É—Å–ª–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏  
        { 'bg-gray-200 text-black hover:bg-gray-300': \!isActive },  
        className // –ø—Ä–æ–±—Ä–æ—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏  
      )}\>  
        Click me  
      \</button\>  
    );  
  }

* **UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã**:  
  * –í—Å–µ –±–∞–∑–æ–≤—ã–µ UI-—ç–ª–µ–º–µ–Ω—Ç—ã (Button, Input, Dialog –∏ —Ç.–¥.) –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ /components/ui.  
  * –ò—Å–ø–æ–ª—å–∑—É–π **Radix UI** –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö (accessible) –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.  
  * –î–ª—è –∏–∫–æ–Ω–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π –±–∏–±–ª–∏–æ—Ç–µ–∫—É **Lucide React**.

## **4\. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º (Zustand)**

* **–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ**: **Zustand** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è **–≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞**. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚Äî –¥–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å React Query. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è UI (—Ç–µ–º–∞, –æ—Ç–∫—Ä—ã—Ç/–∑–∞–∫—Ä—ã—Ç —Å–∞–π–¥–±–∞—Ä) –∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.  
* **–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞**: –ö–∞–∂–¥–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Å–≤–æ–µ–º —Ñ–∞–π–ª–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ /stores.  
  // –ü—Ä–∏–º–µ—Ä: /stores/auth/auth.store.ts  
  import { create } from 'zustand';

  interface User {  
    id: string;  
    name: string;  
    email: string;  
  }

  interface AuthState {  
    user: User | null;  
    token: string | null;  
    isAuthenticated: () \=\> boolean;  
    login: (user: User, token: string) \=\> void;  
    logout: () \=\> void;  
  }

  export const useAuthStore \= create\<AuthState\>((set, get) \=\> ({  
    user: null,  
    token: null,  
    isAuthenticated: () \=\> \!\!get().token,  
    login: (user, token) \=\> set({ user, token }),  
    logout: () \=\> set({ user: null, token: null }),  
  }));

## **5\. –†–∞–±–æ—Ç–∞ —Å API (React Query & Axios)**

* **–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (Fetching)**: –î–ª—è –≤—Å–µ—Ö GET-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏—Å–ø–æ–ª—å–∑—É–π **React Query (@tanstack/react-query)**. –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å UI.  
* **–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (Mutations)**: –î–ª—è POST, PUT, DELETE –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π useMutation –∏–∑ React Query.  
* **HTTP-–∫–ª–∏–µ–Ω—Ç**: **Axios** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π HTTP-–∫–ª–∏–µ–Ω—Ç. –°–æ–∑–¥–∞–π –∏ –Ω–∞—Å—Ç—Ä–æ–π –µ–¥–∏–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –≤ /services/api/api-client.ts (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è baseURL –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏).  
* **–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ö—É–∫–æ–≤**: –°–æ–∑–¥–∞–≤–∞–π –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –º—É—Ç–∞—Ü–∏–π –∏ —Ä–∞–∑–º–µ—â–∞–π –∏—Ö –≤ /services/api/queries/.  
  // –ü—Ä–∏–º–µ—Ä: /services/api/queries/user.queries.ts  
  import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';  
  import axiosInstance from '../api-client'; // –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Axios  
  import { User } from '@/types'; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–µ —Ç–∏–ø—ã

  const USERS\_QUERY\_KEY \= 'users';

  // –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  
  export const useGetUsers \= () \=\> {  
    return useQuery\<User\[\]\>({  
      queryKey: \[USERS\_QUERY\_KEY\],  
      queryFn: async () \=\> {  
        const { data } \= await axiosInstance.get('/users');  
        return data;  
      },  
    });  
  };

  // –•—É–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
  export const useCreateUser \= () \=\> {  
    const queryClient \= useQueryClient();  
    return useMutation({  
      mutationFn: async (newUser: Omit\<User, 'id'\>) \=\> {  
        const { data } \= await axiosInstance.post('/users', newUser);  
        return data;  
      },  
      onSuccess: () \=\> {  
        // –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫—ç—à–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π  
        queryClient.invalidateQueries({ queryKey: \[USERS\_QUERY\_KEY\] });  
      },  
    });  
  };

## **6\. –§–æ—Ä–º—ã (React Hook Form & Zod)**

* **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞–º–∏**: –í—Å–µ —Ñ–æ—Ä–º—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Å –ø–æ–º–æ—â—å—é **React Hook Form**. –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º, —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º –∏ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ñ–æ—Ä–º.  
* **–í–∞–ª–∏–¥–∞—Ü–∏—è**: –î–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º –∏—Å–ø–æ–ª—å–∑—É–π **Zod**. –°–æ–∑–¥–∞–≤–∞–π —Å—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ /lib/validators.ts –∏–ª–∏ —Ä—è–¥–æ–º —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º, –µ—Å–ª–∏ —Å—Ö–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.  
* **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è**: –ò—Å–ø–æ–ª—å–∑—É–π @hookform/resolvers/zod –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Zod —Å React Hook Form.  
  // –ü—Ä–∏–º–µ—Ä —Å—Ö–µ–º—ã –∏ —Ñ–æ—Ä–º—ã  
  // 1\. –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ /lib/validators.ts)  
  import { z } from 'zod';

  export const loginSchema \= z.object({  
    email: z.string().email({ message: "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email" }),  
    password: z.string().min(6, { message: "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤" }),  
  });

  // 2\. –¢–∏–ø –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ö–µ–º—ã  
  type LoginFormValues \= z.infer\<typeof loginSchema\>;

  // 3\. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã  
  import { useForm } from 'react-hook-form';  
  import { zodResolver } from '@hookform/resolvers/zod';  
  import { loginSchema, LoginFormValues } from '@/lib/validators';  
  import { Button } from '@/components/ui/button';  
  import { Input } from '@/components/ui/input';  
  import { Label } from '@/components/ui/label';

  function LoginForm() {  
    const { register, handleSubmit, formState: { errors, isSubmitting } } \= useForm\<LoginFormValues\>({  
      resolver: zodResolver(loginSchema),  
    });

    const onSubmit \= (data: LoginFormValues) \=\> {  
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –º—É—Ç–∞—Ü–∏–∏ –∏–∑ React Query  
      console.log(data);  
    };

    return (  
      \<form onSubmit={handleSubmit(onSubmit)} className="space-y-4"\>  
        \<div className="space-y-2"\>  
          \<Label htmlFor="email"\>Email\</Label\>  
          \<Input id="email" {...register('email')} /\>  
          {errors.email && \<p className="text-red-500 text-sm"\>{errors.email.message}\</p\>}  
        \</div\>

        \<div className="space-y-2"\>  
          \<Label htmlFor="password"\>–ü–∞—Ä–æ–ª—å\</Label\>  
          \<Input id="password" type="password" {...register('password')} /\>  
          {errors.password && \<p className="text-red-500 text-sm"\>{errors.password.message}\</p\>}  
        \</div\>

        \<Button type="submit" disabled={isSubmitting}\>  
          {isSubmitting ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}  
        \</Button\>  
      \</form\>  
    );  
  }

## **7\. –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Å—Å—ã–ª–∫–∏**

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –æ–±—Ä–∞—â–∞–π—Å—è –∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:

* **Next.js 15**: [Official Docs](mdc:@) (–≤–∫–ª—é—á–∞—è App Router –∏ Turbopack) 
* **React 19**: [Official Docs](mdc:https:/react.dev/learn)  
* **TypeScript**: [Official Docs](mdc:https:/www.typescriptlang.org/docs)  
* **Tailwind CSS 4**: [Official Docs](mdc:https:/tailwindcss.com/docs)  
* **Zustand**: [GitHub Repo & Docs](mdc:https:/github.com/pmndrs/zustand)  
* **TanStack React Query v5**: [Official Docs](mdc:https:/tanstack.com/query/latest/docs/react/overview)  
* **React Hook Form**: [Official Docs](mdc:https:/react-hook-form.com/get-started)  
* **Zod**: [Official Docs](mdc:https:/zod.dev)  
* **Radix UI**: [Official Docs](mdc:https:/www.radix-ui.com/primitives/docs/overview/introduction)  
* **Axios**: [Official Docs](mdc:https:/axios-http.com/docs/intro)  


* **Lucide React**: [Icon Library](mdc:https:/lucide.dev/guide/packages/lucide-react)