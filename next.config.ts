import type { NextConfig } from 'next';

const nextConfig: NextConfig = {
  eslint: {
    dirs: ['app', 'components', 'lib', 'services', 'stores'],
  },
  
  // üöÄ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ / Development optimizations  
  experimental: {
    // –£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –∫–æ–º–ø–∏–ª—è—Ü–∏—è / Faster compilation
    optimizePackageImports: ['@radix-ui/react-icons', 'lucide-react'],
    
    // –ë—ã—Å—Ç—Ä—ã–π —Ä–µ—Ñ—Ä–µ—à / Fast refresh
    turbo: {
      rules: {
        '*.svg': {
          loaders: ['@svgr/webpack'],
          as: '*.js',
        },
      },
    },
  },

  // üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ / Performance settings
  webpack: (config, { dev, isServer }) => {
    if (dev && !isServer) {
      // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è development / Development optimization
      config.optimization = {
        ...config.optimization,
        removeAvailableModules: false,
        removeEmptyChunks: false,
        splitChunks: false,
      };
    }
    return config;
  },

  // üìä –û—Ç–∫–ª—é—á–∞–µ–º —Ç–µ–ª–µ–º–µ—Ç—Ä–∏—é / Disable telemetry  
  typescript: {
    // –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ / Fast type checking
    ignoreBuildErrors: false,
  },
};

export default nextConfig;
