"use client"

import React from 'react';
import { ProcessingMenuProgress } from '@/components/ui/processing-menu-progress';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { ArrowLeft } from 'lucide-react';
import Link from 'next/link';

const TestRealDataPage: React.FC = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
  const [isRetranscribing, setIsRetranscribing] = React.useState(false);
  const [isPostprocessing, setIsPostprocessing] = React.useState(false);
  const [isAnalyzing, setIsAnalyzing] = React.useState(false);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ API –≤—ã–∑–æ–≤–∞–º–∏
  const handleRetranscribe = async () => {
    setIsRetranscribing(true);
    try {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏...');
      
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API
      // const response = await fetch('/api/calls/retranscribe', {
      //   method: 'POST',
      //   headers: { 'Content-Type': 'application/json' },
      //   body: JSON.stringify({ callId: 'test-id' })
      // });
      
      // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
      await new Promise(resolve => setTimeout(resolve, 3000));
      
      console.log('‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏:', error);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    } finally {
      setIsRetranscribing(false);
    }
  };

  const handleRolesPostprocess = async () => {
    setIsPostprocessing(true);
    try {
      console.log('üß† –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–æ–ª–µ–π...');
      
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API
      // const response = await fetch('/api/calls/roles-postprocess', {
      //   method: 'POST',
      //   headers: { 'Content-Type': 'application/json' },
      //   body: JSON.stringify({ callId: 'test-id' })
      // });
      
      // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
      await new Promise(resolve => setTimeout(resolve, 2500));
      
      console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–æ–ª–µ–π:', error);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    } finally {
      setIsPostprocessing(false);
    }
  };

  const handleReAnalyze = async () => {
    setIsAnalyzing(true);
    try {
      console.log('ü§ñ –ó–∞–ø—É—Å–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ AI-–∞–Ω–∞–ª–∏–∑–∞...');
      
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ API
      // const response = await fetch('/api/calls/re-analyze', {
      //   method: 'POST',
      //   headers: { 'Content-Type': 'application/json' },
      //   body: JSON.stringify({ callId: 'test-id' })
      // });
      
      // –ò–º–∏—Ç–∞—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
      await new Promise(resolve => setTimeout(resolve, 4000));
      
      console.log('‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π AI-–∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω');
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º AI-–∞–Ω–∞–ª–∏–∑–µ:', error);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    } finally {
      setIsAnalyzing(false);
    }
  };

  return (
    <div className="container mx-auto p-6 space-y-6">
      {/* –•–µ–¥–µ—Ä */}
      <div className="flex items-center gap-4">
        <Button variant="ghost" size="sm" asChild>
          <Link href="/dashboard/call-details-final">
            <ArrowLeft className="h-4 w-4 mr-2" />
            –ù–∞–∑–∞–¥ –∫ —ç—Ç–∞–ª–æ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
          </Link>
        </Button>
        <div>
          <h1 className="text-2xl font-bold">–¢–µ—Å—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</h1>
          <p className="text-muted-foreground">
            –ü—Ä–æ–≤–µ—Ä–∫–∞ ProcessingMenuProgress —Å –∏–º–∏—Ç–∞—Ü–∏–µ–π —Ä–µ–∞–ª—å–Ω—ã—Ö API –≤—ã–∑–æ–≤–æ–≤
          </p>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π</CardTitle>
          <CardDescription>
            –≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–º–∏—Ç–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ API –≤—ã–∑–æ–≤—ã –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤–æ–Ω–∫–æ–≤.
            –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤.
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="p-4 border rounded-lg bg-blue-50">
              <h3 className="font-semibold text-blue-600">üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è</h3>
              <p className="text-sm text-muted-foreground">
                –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–∑–æ–≤–∞ API –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ (3 —Å–µ–∫)
              </p>
            </div>
            <div className="p-4 border rounded-lg bg-purple-50">
              <h3 className="font-semibold text-purple-600">üß† –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ–ª–µ–π</h3>
              <p className="text-sm text-muted-foreground">
                –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–∑–æ–≤–∞ API –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–æ–ª–µ–π (2.5 —Å–µ–∫)
              </p>
            </div>
            <div className="p-4 border rounded-lg bg-green-50">
              <h3 className="font-semibold text-green-600">ü§ñ AI-–∞–Ω–∞–ª–∏–∑</h3>
              <p className="text-sm text-muted-foreground">
                –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–∑–æ–≤–∞ API –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ AI-–∞–Ω–∞–ª–∏–∑–∞ (4 —Å–µ–∫)
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
      <Card>
        <CardHeader>
          <CardTitle>ProcessingMenuProgress</CardTitle>
          <CardDescription>
            –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∏ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
          </CardDescription>
        </CardHeader>
        <CardContent className="flex justify-center">
          <ProcessingMenuProgress 
            onRetranscribe={handleRetranscribe}
            onRolesPostprocess={handleRolesPostprocess}
            onReAnalyze={handleReAnalyze}
            isRetranscribing={isRetranscribing}
            isPostprocessing={isPostprocessing}
            isAnalyzing={isAnalyzing}
          />
        </CardContent>
      </Card>

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</CardTitle>
        </CardHeader>
        <CardContent className="space-y-2">
          <p className="text-sm">
            <strong>1.</strong> –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12 ‚Üí Console)
          </p>
          <p className="text-sm">
            <strong>2.</strong> –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —à–µ—Å—Ç–µ—Ä–µ–Ω–∫–∏ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é —Ñ—É–Ω–∫—Ü–∏—é
          </p>
          <p className="text-sm">
            <strong>3.</strong> –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –∞–Ω–∏–º–∞—Ü–∏–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –∏ –ª–æ–≥–∞–º–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
          </p>
          <p className="text-sm">
            <strong>4.</strong> –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
          </p>
          <p className="text-sm">
            <strong>5.</strong> –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
          </p>
        </CardContent>
      </Card>

      {/* –°—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <Card>
        <CardHeader>
          <CardTitle>–î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</CardTitle>
        </CardHeader>
        <CardContent className="space-y-2">
          <div className="flex gap-2">
            <Button variant="outline" size="sm" asChild>
              <Link href="/dashboard/call-details-final">
                –≠—Ç–∞–ª–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
              </Link>
            </Button>
            <Button variant="outline" size="sm" asChild>
              <Link href="/dashboard/processing-menu-demo">
                –î–µ–º–æ –≤—Å–µ—Ö –∞–Ω–∏–º–∞—Ü–∏–π
              </Link>
            </Button>
            <Button variant="outline" size="sm" asChild>
              <Link href="/dashboard/calls/test-id">
                –ë–æ–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
              </Link>
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default TestRealDataPage; 